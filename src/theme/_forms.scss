@use './variables';

fieldset {
  border: 1px solid variables.$grey-1;
  border-radius: 10px;
  padding: variables.$spacing-2;
  border-top: 4px solid variables.$primary;
  box-shadow: 3px 6px 15px 0px rgba(43, 46, 69, 0.2);

  h4 {
    margin: 0;
    margin-bottom: variables.$spacing-2;
    position: relative;
    font-weight: 500;

    &::after {
      width: calc(100% + 2 * variables.$spacing-2);
      content: ' ';
      border-bottom: 1px solid variables.$grey-1;
      position: absolute;
      bottom: -(variables.$spacing-1);
      left: -(variables.$spacing-2);
    }
  }
}

label.form-label {
  display: flex;
  flex-direction: column;
  font-size: 1rem;
  margin-bottom: variables.$spacing-1;
  position: relative;
  top: 4px;

  & > span.error,
  &.error > span {
    color: variables.$danger;
  }

  & > span {
    font-size: inherit;
    padding: 2px 0;
  }

  span.helper-text {
    font-size: inherit;
    opacity: 0.9;
    padding: 1px 0;
    height: 21px;
  }

  &.required {
    & > span:first-child:after {
      content: '*';
      color: variables.$danger;
      font-weight: bold;
    }
  }

  &:focus-within {
    color: variables.$primary;
  }

  input.indent-text {
    padding-left: variables.$spacing-3;
  }

  svg.left-inline-icon {
    position: absolute;
    top: 2.7rem;
    left: 1rem;

    & ~ input {
      padding-left: variables.$spacing-3;
    }
  }
}

input,
textarea {
  border: 1.5px solid variables.$grey-3;
  border-radius: variables.$border-radius;
  padding: variables.$spacing-1;
  font-size: 16px;

  &.full-width {
    width: 100%;
  }

  &:focus,
  &:active,
  &:focus-visible {
    border-color: variables.$primary;
    outline: none;
  }

  &:disabled {
    background-color: variables.$grey-1;
    cursor: not-allowed;
  }

  &.error {
    border-color: variables.$danger;
  }

  &[type='password'] {
    letter-spacing: 4px;

    &::placeholder {
      letter-spacing: normal;
    }
  }

  ~ svg.right-inline-icon {
    cursor: pointer;
    margin-left: -30px;
  }

  &[type='checkbox']:not(.toggle) {
    appearance: unset;
    background: transparent;
    border-bottom: 0;
    display: inline-block;
    height: 30px;
    margin: 0;
    position: relative;
    width: 30px;
    border-color: transparent;

    &::before {
      border: solid 2px variables.$grey-3;
      border-radius: variables.$border-radius;
      content: '';
      display: inline-block;
      height: 30px;
      left: 0px;
      position: absolute;
      top: 0px;
      width: 30px;
    }

    &:checked::before {
      background: variables.$primary url('../assets/images/checkmark.svg') 2px no-repeat;
      border-color: variables.$primary;
      background-position: center;
    }

    & ~ .checkmark.disabled {
      cursor: not-allowed;
      opacity: 0.5;
    }

    & ~ .checkmark > span {
      font-size: 16px;
      margin-left: 20px;
    }
  }
}

.radio-btn-container {
  cursor: pointer;
  display: block;
  font-size: 16px;
  margin-bottom: 12px;
  padding-left: 50px;
  position: relative;
  user-select: none;
  margin: variables.$spacing-2 0;

  /* Hide the browser's default radio button */
  input {
    cursor: pointer;
    left: 0;
    opacity: 0;
    position: absolute;
  }

  /* Create a custom radio button */
  .checkmark {
    background-color: variables.$white;
    border-radius: 50%;
    height: 25px;
    left: 0;
    position: absolute;
    top: 0;
    width: 25px;
    border: 1px solid variables.$grey-3;

    &.disabled {
      cursor: not-allowed;
      opacity: 0.5;
    }
  }

  /* On mouse-over, add a grey background color */
  &:hover input ~ .checkmark {
    background-color: variables.$grey-1;
  }

  /* When the radio button is checked, add a background */
  input:checked ~ .checkmark {
    background-color: variables.$primary;
    border: none;
  }

  /* Create the indicator (the dot/circle - hidden when not checked) */
  .checkmark:after {
    content: '';
    display: none;
    position: absolute;
  }

  /* Show the indicator (dot/circle) when checked */
  input:checked ~ .checkmark:after {
    display: block;
  }

  /* Style the indicator (dot/circle) */
  .checkmark:after {
    background: white;
    border-radius: 50%;
    height: 13px;
    left: 6px;
    top: 6px;
    width: 13px;
  }
}

.react-datepicker-wrapper {
  input {
    width: inherit;
  }
}

select {
  padding: 10px 20px;
  font-size: 18px;
  font-weight: bold;
  border-radius: 30px;
  border: none;
  background-color: variables.$grey-2;

  option {
    font-size: 16px;
  }
}
